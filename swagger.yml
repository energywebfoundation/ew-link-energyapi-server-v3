openapi: 3.0.1
info:
  title: Energy Measurement API
  description: Company name, project name, purpose of the api creation, date of last
    update, sometimes code author name.
  version: 3-oas3
servers:
- url: https://api.yourcompany.com/v3
  description: replace with server endpoint
security:
- basicAuth: []
- appID: []
paths:
  /asset:
    post:
      tags:
      - Asset
      summary: Create a new asset, returns asset id
      parameters:
      - name: role
        in: query
        description: Whether this assset is a producer or consumer
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/AssetRole'
      - name: manufacturer
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: model
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: serialNumber
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: latitude
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: longitude
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: energyUnit
        in: query
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/EnergyUnit'
      - name: isAccumulated
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          links:
            GetAssetByID:
              operationId: getAsset
              parameters:
                assetID: $response.body#/id
        400:
          description: 'Bad request: All required fields need to be set. | energyUnit
            needs to be a valid choice.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: 'Unauthorized: Check authorisation'
        500:
          description: 'Internal server error: Check error message for additional
            details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        501:
          description: 'Not Implemented: The server does not have this message implemented.'
  /asset/{assetID}:
    get:
      tags:
      - Asset
      summary: Get asset information by id
      parameters:
      - name: assetID
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
      security: []
    delete:
      tags:
      - Asset
      summary: Delete an asset and it's metering data
      parameters:
      - name: assetID
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        200:
          description: Success
  /asset/{assetID}/energy:
    get:
      tags:
      - Energy
      summary: Get energy measurements of asset
      parameters:
      - name: assetID
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: role
        in: query
        description: Role of energy asset for which the measurement is returned
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - producer
          - consumer
      - name: timeStart
        in: query
        description: Date in RFC 3339 format. ie. 2018-03-14T17:11:19+00:00
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: timeEnd
        in: query
        description: Date in RFC 3339 format. ie. 2018-03-14T17:12:20+00:00
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: limit
        in: query
        description: How many items to return at one time (max 10)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 5
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Energy'
                x-content-type: application/json
    post:
      tags:
      - Energy
      summary: Publish new energy measurement
      operationId: asset_asset_id_energy_post
      parameters:
      - name: assetID
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: energy
        in: query
        description: Registered in the asset energy unit
        required: true
        style: form
        explode: true
        schema:
          type: number
      - name: measurement_time
        in: query
        description: Time of measurement in the device, in RFC 3339 format. ie. 2018-03-14T17:12:20+00:00
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Energy'
      x-openapi-router-controller: swagger_server.controllers.energy_controller
components:
  schemas:
    AssetRole:
      type: string
      enum:
      - producer
      - consumer
    EnergyUnit:
      type: string
      enum:
      - joule
      - wattHour
      - kilowattHour
      - megawattHour
      - gigawattHour
    Asset:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        role:
          $ref: '#/components/schemas/AssetRole'
        manufacturer:
          type: string
        model:
          type: string
        serial_number:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        energy_unit:
          $ref: '#/components/schemas/EnergyUnit'
        is_accumulated:
          type: boolean
      example:
        is_accumulated: true
        role: producer
        latitude: 6.027456183070403
        energy_unit: joule
        model: model
        serial_number: serial_number
        id: 0
        manufacturer: manufacturer
        longitude: 1.4658129805029452
    Energy:
      type: object
      properties:
        energy:
          type: number
          description: Registered in Mega Watts
        measurement_time:
          type: string
          description: Time of measurement in the device, in RFC 3339 format. ie.
            2018-03-14T17:12:20+00:00
          format: date-time
      description: Energy measured at a certain time
      example:
        measurement_time: 2000-01-23T04:56:07.000+00:00
        energy: 0.8008281904610115
    Error:
      type: object
      properties:
        error:
          type: string
          description: The kind of error that occured
        message:
          type: string
          description: Additional error information
      description: Error information
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      x-basicInfoFunc: swagger_server.controllers.authorization_controller.check_basicAuth
    appID:
      type: apiKey
      name: X-API-Key
      in: header
      x-apikeyInfoFunc: swagger_server.controllers.authorization_controller.check_appID

